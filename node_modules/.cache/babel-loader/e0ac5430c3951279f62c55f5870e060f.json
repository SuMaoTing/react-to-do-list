{"ast":null,"code":"var _jsxFileName = \"/Users/sumaoting/Desktop/react-to-do-list/src/CheckBox/index.js\";\nimport React from \"react\";\nimport styles from './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CheckBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      task: [{\n        id: 1,\n        name: 'abc',\n        check: false\n      }, {\n        id: 2,\n        name: 'def',\n        check: true\n      }]\n    };\n    this.checkHandler = this.checkHandler.bind(this);\n    this.deleteHandler = this.deleteHandler.bind(this);\n    this.addHandler = this.addHandler.bind(this);\n    this.inputHandler = this.inputHandler.bind(this);\n  }\n\n  checkHandler(id) {\n    const newList = this.state.task.map(el => {\n      if (el.id === id) el.check = !el.check;\n      return el;\n    });\n    this.setState({\n      task: newList\n    });\n  }\n\n  deleteHandler(id) {\n    const newList = this.state.task.filter(el => el.id !== id);\n    this.setState({\n      task: newList\n    });\n  }\n\n  addHandler() {\n    this.setState({\n      input: '',\n      task: this.state.task.concat([{\n        id: Date.now(),\n        name: this.state.input,\n        check: false\n      }])\n    });\n  }\n\n  inputHandler(e) {\n    this.setState({\n      input: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.input,\n        onChange: this.inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), this.state.task.map(el => /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"CheckBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: el.check,\n          onChange: () => this.checkHandler(el.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `task ${el.check ? \"task-checked\" : \"\"}`,\n          children: el.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"delete\",\n          onClick: () => this.deleteHandler(el.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, el.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CheckBox;","map":{"version":3,"sources":["/Users/sumaoting/Desktop/react-to-do-list/src/CheckBox/index.js"],"names":["React","styles","CheckBox","Component","constructor","props","state","input","task","id","name","check","checkHandler","bind","deleteHandler","addHandler","inputHandler","newList","map","el","setState","filter","concat","Date","now","e","target","value","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from './index.css';\n\nclass CheckBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            input:'',\n            task:[\n                {\n                    id:1,\n                    name: 'abc',\n                    check: false\n                },\n                {\n                    id:2,\n                    name: 'def',\n                    check: true\n                }\n            ]\n        };\n        this.checkHandler = this.checkHandler.bind(this);\n        this.deleteHandler = this.deleteHandler.bind(this);\n        this.addHandler = this.addHandler.bind(this);\n        this.inputHandler = this.inputHandler.bind(this);\n    }\n    checkHandler(id){\n        const newList = this.state.task.map((el)=>{\n            if(el.id === id) el.check = !el.check;\n            return el;\n        })\n        this.setState({task:newList});\n    }\n\n    deleteHandler(id){\n        const newList = this.state.task.filter((el)=>(el.id !== id))\n        this.setState({task:newList});\n    }\n\n    addHandler(){\n        this.setState({input: '', \n            task:this.state.task.concat([\n            {\n                id:Date.now(),\n                name:this.state.input,\n                check: false\n            }\n        ])})\n    }\n\n    inputHandler(e){\n        this.setState({input: e.target.value})\n    }\n\n    render() {\n        return(\n            <div className=\"Container\">\n                    <input type='text' value={this.state.input} onChange={this.inputHandler}/>\n                    <button onClick={this.addHandler}/>\n                {this.state.task.map((el)=>(\n                    <form className=\"CheckBox\" key={el.id}>\n                        <input type=\"checkbox\" checked={el.check} onChange={()=>this.checkHandler(el.id)}/>\n                        <p className={`task ${el.check ? \"task-checked\" : \"\"}`}>{el.name}</p>\n                        <input type=\"button\" value=\"delete\" onClick={()=>this.deleteHandler(el.id)}/>\n                    </form>\n                ))}\n            </div>\n        )\n    }\n} \nexport default CheckBox;"]},"metadata":{},"sourceType":"module"}