[{"/Users/sumaoting/Desktop/react-to-do-list/src/index.js":"1","/Users/sumaoting/Desktop/react-to-do-list/src/Header/index.js":"2","/Users/sumaoting/Desktop/react-to-do-list/src/Footer/index.js":"3","/Users/sumaoting/Desktop/react-to-do-list/src/TodoList/index.js":"4"},{"size":293,"mtime":1655476075721,"results":"5","hashOfConfig":"6"},{"size":178,"mtime":1655440247066,"results":"7","hashOfConfig":"6"},{"size":309,"mtime":1655457301768,"results":"8","hashOfConfig":"6"},{"size":2500,"mtime":1655453995550,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j8jd7c",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"17"},"/Users/sumaoting/Desktop/react-to-do-list/src/index.js",[],[],"/Users/sumaoting/Desktop/react-to-do-list/src/Header/index.js",["26"],[],"import React from 'react';\nimport styles from './index.css';\nconst Header = () => (\n    <div className=\"Header\">\n        <h1>To Do List</h1>\n    </div>\n);\n\nexport default Header;",[],"/Users/sumaoting/Desktop/react-to-do-list/src/Footer/index.js",["27"],[],"import React from 'react';\nimport styles from './index.css';\n\nconst Footer = () =>(\n    <>\n        <p className=\"Footer\">made by <a href=\"https://sumaoting.github.io/MyWebsite/\"> SuMaoTing </a> at 2022/5 <a href=\"https://github.com/SuMaoTing/react-to-do-list\">Code</a></p> \n    </> \n);\n\nexport default Footer;","/Users/sumaoting/Desktop/react-to-do-list/src/TodoList/index.js",["28"],[],"import React from \"react\";\nimport styles from './index.css';\n\nclass TodoList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            input:'',\n            task:[\n                {\n                    id: 1655453319099,\n                    name: \"應數作業\",\n                    check: true,\n                },\n                {\n                    id: 1090294902101,\n                    name: \"洗碗\",\n                    check: false,\n                },\n                {\n                    id: 109029490096,\n                    name: \"背譜\",\n                    check: false,\n                }\n            ]\n        };\n        this.checkHandler = this.checkHandler.bind(this);\n        this.deleteHandler = this.deleteHandler.bind(this);\n        this.addHandler = this.addHandler.bind(this);\n        this.inputHandler = this.inputHandler.bind(this);\n    }\n    checkHandler(id){\n        const newList = this.state.task.map((el)=>{\n            if(el.id === id) el.check = !el.check;\n            return el;\n        })\n        this.setState({task:newList});\n    }\n\n    deleteHandler(id){\n        const newList = this.state.task.filter((el)=>(el.id !== id))\n        this.setState({task:newList});\n    }\n\n    addHandler(){\n        if(this.state.input !== \"\"){\n            this.setState({input: '', \n                task:this.state.task.concat([\n                {\n                    id:Date.now(),\n                    name:this.state.input,\n                    check: false\n                }\n            ])})\n        }\n    }\n\n    inputHandler(e){\n        this.setState({input: e.target.value})\n    }\n\n    render() {\n        return(\n            <div className=\"Container\">\n                <div className=\"AddBox\">\n                    <input type='text' value={this.state.input} onChange={this.inputHandler}/>\n                    <button onClick={this.addHandler}>add</button>\n                </div>    \n                {this.state.task.map((el)=>(\n                    <form className=\"CheckBox\" key={el.id}>\n                        <input type=\"checkbox\" checked={el.check} onChange={()=>this.checkHandler(el.id)}/>\n                        <p className={`task ${el.check ? \"task-checked\" : \"\"}`}>{el.name}</p>\n                        <input className=\"deleteButton\" type=\"button\" value=\"delete\" onClick={()=>this.deleteHandler(el.id)}/>\n                    </form>\n                ))}\n            </div>\n        )\n    }\n} \nexport default TodoList;",{"ruleId":"29","severity":1,"message":"30","line":2,"column":8,"nodeType":"31","messageId":"32","endLine":2,"endColumn":14},{"ruleId":"29","severity":1,"message":"30","line":2,"column":8,"nodeType":"31","messageId":"32","endLine":2,"endColumn":14},{"ruleId":"29","severity":1,"message":"30","line":2,"column":8,"nodeType":"31","messageId":"32","endLine":2,"endColumn":14},"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar"]